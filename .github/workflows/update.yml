# are there better ways to do this? yeah probably
# do i want to hear about it? NO
# unless you're coding it
# lmao

name: Update addons data
on:
    push:
        branches: main
    workflow_dispatch:
        inputs:
            Version:
                required: false
                type: string
    schedule:
        - cron: 30 11/12 * * *

permissions: write-all

jobs:
    update:
        name: Update
        runs-on: ubuntu-20.04

        steps:
            # Clone
            - uses: actions/checkout@v4.1.0
              with:
                  repository: ScratchAddons/ScratchAddons
                  sparse-checkout: |
                      addons/*/addon.json
                      addons/addons.json
                      LICENSE
                      manifest.json
                  sparse-checkout-cone-mode: false
                  fetch-tags: true
                  fetch-depth: 0
            # Checkout
            - run: echo "VERSION=${{ inputs.Version || '$(git describe --tags $(git rev-list --tags --max-count=1))' }}" >> "$GITHUB_ENV"
            - run: git checkout "$VERSION"
            # Check version
            - uses: actions/setup-node@v3
              with:
                  registry-url: "https://registry.npmjs.org"
            - run: |
                if [ $VERSION == "v$(npm view @sa-community/addons-data version)" ]; then
                    echo "No new version"
                    exit 1
                fi
            # Setup directory
            - run: mkdir dist
            - run: cp LICENSE dist/LICENSE
            - run: cp manifest.json dist/manifest.json
            # Get package
            - run: echo '{"name":"@sa-community/addons-data","version":"'$(echo $VERSION | sed "s/v//")'","description":"Scratch Addonsâ€™ addons data","homepage":"https://github.com/scratchaddons-community","repository":"https://github.com/scratchaddons-community/addons-data-script","license":"GPLv3","maintainers":["RedGuy12"],"main":"addons.json"}' > dist/package.json
            # Get addons
            - run: |
                  jq -c 'map(select(startswith("//") | not) | {addonId: ., manifest: (try input catch null)})' addons/addons.json $(jq -r 'map(select(startswith("//") | not) | "addons/" + . + "/addon.json") | join(" ")' addons/addons.json) >> dist/addons.json
            # Publish
            - run: npm publish --provenance --access public
              working-directory: dist
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
